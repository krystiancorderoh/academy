/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/7.0.47
 * Generated at: 2019-10-30 03:42:59 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.jsp.city;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;
import org.slf4j.LoggerFactory;
import org.slf4j.Logger;
import com.softtek.academy.jsp.domain.model.CityEntity;
import com.softtek.academy.jsp.service.CityService;
import com.softtek.academy.jsp.domain.model.StateEntity;
import com.softtek.academy.jsp.service.StateService;
import java.util.List;

public final class list_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent {


	static final Logger LOGGER = LoggerFactory.getLogger("StateList");

	CityService cityService = new CityService(); 

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private javax.el.ExpressionFactory _el_expressionfactory;
  private org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public void _jspInit() {
    _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
    _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
        throws java.io.IOException, javax.servlet.ServletException {

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write("\r\n");
      out.write('\r');
      out.write('\n');

	String cityIdParam = request.getParameter("cityId");
	if (cityIdParam != null) {
	    cityService.delete(new Long(cityIdParam));
	}

	LOGGER.info("Retrieving states:");

	List<CityEntity> cities = cityService.getCities();

      out.write("\r\n");
      out.write("\r\n");
      out.write("<html>\r\n");
      out.write("<head>\r\n");
      out.write("\t<title>JSPs Application</title>\r\n");
      out.write("\t<meta charset=\"UTF-8\">\r\n");
      out.write("</head>\r\n");
      out.write("<body>\r\n");
      out.write("\t<h2>Cities</h2>\r\n");
      out.write("\t\r\n");
      out.write("\t<table border=\"1\">\r\n");
      out.write("\t\t<tr>\r\n");
      out.write("\t\t\t<th>Id</th>\r\n");
      out.write("\t\t\t<th>Description</th>\r\n");
      out.write("\t\t\t<th>State</th>\r\n");
      out.write("\t\t\t<th>Delete</th>\r\n");
      out.write("\t\t</tr>");

		
		for (final CityEntity city : cities) { 
      out.write("\r\n");
      out.write("\t\t\t<tr>\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t<a href=\"edit.jsp?cityId=");
      out.print( city.getId() );
      out.write('"');
      out.write('>');
      out.print( city.getId() );
      out.write("</a>\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print( city.getDescription() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>");
      out.print( city.getState().getDescription() );
      out.write("</td>\r\n");
      out.write("\t\t\t\t<td>\r\n");
      out.write("\t\t\t\t\t[ <a href=\"list.jsp?id=");
      out.print( city.getId() );
      out.write("\">X</a> ]\r\n");
      out.write("\t\t\t\t</td>\r\n");
      out.write("\t\t\t</tr>");

		}
		
	
      out.write("</table>\r\n");
      out.write("\t\r\n");
      out.write("\t<br>\r\n");
      out.write("\t<a href=\"");
      out.print( request.getContextPath() );
      out.write("/index.jsp\">Return to home</a>\r\n");
      out.write("\t\r\n");
      out.write("</body>\r\n");
      out.write("</html>\r\n");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try { out.clearBuffer(); } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
